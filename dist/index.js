'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _web = require('web3');

var _web2 = _interopRequireDefault(_web);

var _mysql = require('mysql');

var _mysql2 = _interopRequireDefault(_mysql);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* babel-plugin-inline-import 'gittoken-contracts/build/contracts/GitToken.json' */var GitTokenContract = '{\n  "contract_name": "GitToken",\n  "abi": [\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_rewardType",\n          "type": "string"\n        }\n      ],\n      "name": "getRewardDetails",\n      "outputs": [\n        {\n          "name": "",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "name",\n      "outputs": [\n        {\n          "name": "",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_spender",\n          "type": "address"\n        },\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "name": "approve",\n      "outputs": [],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "totalSupply",\n      "outputs": [\n        {\n          "name": "",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_username",\n          "type": "string"\n        }\n      ],\n      "name": "getContributorAddress",\n      "outputs": [\n        {\n          "name": "",\n          "type": "address"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_from",\n          "type": "address"\n        },\n        {\n          "name": "_to",\n          "type": "address"\n        },\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "name": "transferFrom",\n      "outputs": [],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "organization",\n      "outputs": [\n        {\n          "name": "",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "decimals",\n      "outputs": [\n        {\n          "name": "",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_contributorAddress",\n          "type": "address"\n        }\n      ],\n      "name": "getContributorUsername",\n      "outputs": [\n        {\n          "name": "",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_rewardValue",\n          "type": "uint256"\n        },\n        {\n          "name": "_rewardType",\n          "type": "string"\n        }\n      ],\n      "name": "setRewardValue",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "",\n          "type": "address"\n        }\n      ],\n      "name": "owner",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_username",\n          "type": "string"\n        },\n        {\n          "name": "_rewardType",\n          "type": "string"\n        },\n        {\n          "name": "_rewardBonus",\n          "type": "uint256"\n        },\n        {\n          "name": "_reservedValue",\n          "type": "uint256"\n        },\n        {\n          "name": "_deliveryID",\n          "type": "string"\n        }\n      ],\n      "name": "rewardContributor",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_contributor",\n          "type": "address"\n        }\n      ],\n      "name": "balanceOf",\n      "outputs": [\n        {\n          "name": "",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_username",\n          "type": "string"\n        }\n      ],\n      "name": "getUnclaimedRewards",\n      "outputs": [\n        {\n          "name": "",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "symbol",\n      "outputs": [\n        {\n          "name": "",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_to",\n          "type": "address"\n        },\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "name": "transfer",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_username",\n          "type": "string"\n        },\n        {\n          "name": "_code",\n          "type": "bytes"\n        }\n      ],\n      "name": "setContributor",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_contributor",\n          "type": "address"\n        },\n        {\n          "name": "_username",\n          "type": "string"\n        }\n      ],\n      "name": "verifyContributor",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_owner",\n          "type": "address"\n        },\n        {\n          "name": "_spender",\n          "type": "address"\n        }\n      ],\n      "name": "allowance",\n      "outputs": [\n        {\n          "name": "",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "newOwner",\n          "type": "address"\n        }\n      ],\n      "name": "transferOwnership",\n      "outputs": [],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "inputs": [\n        {\n          "name": "_contributor",\n          "type": "address"\n        },\n        {\n          "name": "_name",\n          "type": "string"\n        },\n        {\n          "name": "_username",\n          "type": "string"\n        },\n        {\n          "name": "_organization",\n          "type": "string"\n        },\n        {\n          "name": "_symbol",\n          "type": "string"\n        },\n        {\n          "name": "_decimals",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "constructor"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "owner",\n          "type": "address"\n        },\n        {\n          "indexed": true,\n          "name": "spender",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        }\n      ],\n      "name": "Approval",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "from",\n          "type": "address"\n        },\n        {\n          "indexed": true,\n          "name": "to",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        }\n      ],\n      "name": "Transfer",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "contributor",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "username",\n          "type": "string"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        },\n        {\n          "indexed": false,\n          "name": "reservedValue",\n          "type": "uint256"\n        },\n        {\n          "indexed": false,\n          "name": "date",\n          "type": "uint256"\n        },\n        {\n          "indexed": false,\n          "name": "rewardType",\n          "type": "string"\n        }\n      ],\n      "name": "Contribution",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "contributor",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "username",\n          "type": "string"\n        },\n        {\n          "indexed": false,\n          "name": "date",\n          "type": "uint256"\n        }\n      ],\n      "name": "ContributorVerified",\n      "type": "event"\n    }\n  ],\n  "unlinked_binary": "",\n  "networks": {\n    "17": {\n      "links": {},\n      "events": {\n        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "owner",\n              "type": "address"\n            },\n            {\n              "indexed": true,\n              "name": "spender",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            }\n          ],\n          "name": "Approval",\n          "type": "event"\n        },\n        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "from",\n              "type": "address"\n            },\n            {\n              "indexed": true,\n              "name": "to",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            }\n          ],\n          "name": "Transfer",\n          "type": "event"\n        },\n        "0xc3b4f845790d6659bd38fdced442a58d1b56a46a7052115d0e3c9e017adf4921": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "contributor",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "username",\n              "type": "string"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "date",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "rewardType",\n              "type": "string"\n            }\n          ],\n          "name": "Contribution",\n          "type": "event"\n        },\n        "0xce96c271d8db9db4a90e538f30d7ec5a63f116893c4636688d9ce1502b5cc936": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "contributor",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "username",\n              "type": "string"\n            },\n            {\n              "indexed": false,\n              "name": "date",\n              "type": "uint256"\n            }\n          ],\n          "name": "ContributorVerified",\n          "type": "event"\n        },\n        "0xeb1d29659fe1e458a59d47ceab90b84b14e2eb79da4602088f9e9a8bcc228ca4": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "contributor",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "date",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "rewardType",\n              "type": "string"\n            }\n          ],\n          "name": "Contribution",\n          "type": "event"\n        },\n        "0x270e8b0620bd7a85855d0ae9401e7fa30ea6319fbf06c05f38cad80875f1cc01": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "contributor",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "username",\n              "type": "string"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "reservedValue",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "date",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "rewardType",\n              "type": "string"\n            }\n          ],\n          "name": "Contribution",\n          "type": "event"\n        }\n      },\n      "updated_at": 1501275952066\n    }\n  },\n  "schema_version": "0.0.5",\n  "updated_at": 1501275952066\n}';

var _JSON$parse = JSON.parse(GitTokenContract),
    abi = _JSON$parse.abi;

var GitTokenAnalytics = function () {
  /**
   * GitToken Analytics Constructor Options
   * @param  {Object} options { mysql: { ...} }
   */
  function GitTokenAnalytics(options) {
    _classCallCheck(this, GitTokenAnalytics);

    this.listen();
    var web3Provider = options.web3Provider,
        mysqlOpts = options.mysqlOpts,
        contractAddress = options.contractAddress;

    if (web3Provider && mysqlOpts && contractAddress && abi) {
      this.configure({ web3Provider: web3Provider, mysqlOpts: mysqlOpts, contractAddress: contractAddress, abi: abi }).then(function (configured) {
        console.log('GitToken Analytics Processor Configured');
        console.log(JSON.stringify(configured, null, 2));
      });
    } else {
      console.log('GitToken Analytics Processor listening for \'configure\' event.');
    }
  }

  _createClass(GitTokenAnalytics, [{
    key: 'configure',
    value: function configure(_ref) {
      var _this = this;

      var web3Provider = _ref.web3Provider,
          mysqlOpts = _ref.mysqlOpts,
          contractAddress = _ref.contractAddress,
          abi = _ref.abi;

      return new _bluebird2.default(function (resolve, reject) {
        _this.establishMySqlConnection({ mysqlOpts: mysqlOpts }).then(function () {
          return _this.configureWeb3Provider({ web3Provider: web3Provider });
        }).then(function () {
          return _this.configureContract({ abi: abi, contractAddress: contractAddress });
        }).then(function () {
          return _this.getContractDetails();
        }).then(function () {
          _this.watchContributionEvents();
          return null;
        }).then(function () {
          resolve({
            contractDetails: _this.contractDetails
          });
        }).catch(function (error) {
          _this.handleError({ error: error, method: 'configure' });
        });
      });
    }
  }, {
    key: 'establishMySqlConnection',
    value: function establishMySqlConnection(_ref2) {
      var _this2 = this;

      var mysqlOpts = _ref2.mysqlOpts;

      return new _bluebird2.default(function (resolve, reject) {
        try {
          _this2.mysql = _mysql2.default.createConnection(_extends({}, mysqlOpts));
          _this2.mysql.connect();
          resolve({ mysql: _this2.mysql });
        } catch (error) {
          _this2.handleError({ error: error, method: 'establishMySqlConnection' });
        }
      });
    }
  }, {
    key: 'query',
    value: function query(_ref3) {
      var _this3 = this;

      var queryString = _ref3.queryString,
          _ref3$queryObject = _ref3.queryObject,
          queryObject = _ref3$queryObject === undefined ? [] : _ref3$queryObject;

      return new _bluebird2.default(function (resolve, reject) {
        /* TODO: Check mysql docs for second param (queryObject) */
        _this3.mysql.query(queryString, function (error, result) {
          if (error) {
            _this3.handleError({ error: error, method: 'query' });
          }
          resolve(result);
        });
      });
    }
  }, {
    key: 'configureWeb3Provider',
    value: function configureWeb3Provider(_ref4) {
      var _this4 = this;

      var web3Provider = _ref4.web3Provider;

      return new _bluebird2.default(function (resolve, reject) {
        try {
          console.log('web3Provider', web3Provider);
          _this4.web3 = new _web2.default(new _web2.default.providers.HttpProvider(web3Provider));
          _this4.eth = (0, _bluebird.promisifyAll)(_this4.web3.eth);
          resolve({ web3: _this4.web3, eth: _this4.eth });
        } catch (error) {
          _this4.handleError({ error: error, method: 'configureWeb3Provider' });
        }
      });
    }
  }, {
    key: 'configureContract',
    value: function configureContract(_ref5) {
      var _this5 = this;

      var abi = _ref5.abi,
          contractAddress = _ref5.contractAddress;

      return new _bluebird2.default(function (resolve, reject) {
        _this5.contract = _this5.web3.eth.contract(abi).at(contractAddress);
        _bluebird2.default.resolve(Object.keys(_this5.contract)).map(function (method) {
          if (_this5.contract[method] && _this5.contract[method]['request']) {
            _this5.contract[method] = (0, _bluebird.promisifyAll)(_this5.contract[method]);
          }
        }).then(function () {
          resolve(_this5.contract);
        }).catch(function (error) {
          _this5.handleError({ error: error, method: 'configureContract' });
        });
      });
    }
  }, {
    key: 'watchContributionEvents',
    value: function watchContributionEvents() {
      var _this6 = this;

      var events = this.contract.Contribution({}, { fromBlock: 0, toBlock: 'latest' });

      events.watch(function (error, result) {
        if (error) {
          _this6.handleError({ error: error, method: 'watchContributionEvents' });
        }
        _this6.saveContributionEvent({ event: result }).then(function (contribution) {
          process.send(JSON.stringify({
            event: 'new_contribution',
            data: contribution,
            message: 'New contribution received and saved.'
          }));
          return (0, _bluebird.join)(_this6.updateLeaderboard({ contribution: contribution }), _this6.updateTotalSupply({ contribution: contribution }), _this6.updateContributionFrequency({ contribution: contribution }));
        }).then(function (data) {
          console.log('data', data);
        });
      });
    }
  }, {
    key: 'updateContributionFrequency',
    value: function updateContributionFrequency(_ref6) {
      var _this7 = this;

      var contribution = _ref6.contribution;

      return new _bluebird2.default(function (resolve, reject) {
        _this7.query({ queryString: '\n        CREATE TABLE IF NOT EXISTS contribution_frequency (\n          rewardType     CHARACTER(66) PRIMARY KEY,\n          count          BIGINT NOT NULL DEFAULT 0,\n          percentOfTotal REAL\n        );\n      ' }).then(function () {
          return _this7.query({
            queryString: '\n            INSERT INTO contribution_frequency (\n              rewardType,\n              count,\n              percentOfTotal\n            ) SELECT rewardType, count(rewardType), count(rewardType)/(SELECT count(*)*1.0 FROM contributions)*100.0 FROM contributions GROUP BY rewardType\n            ON DUPLICATE KEY UPDATE\n            rewardType=VALUES(rewardType),\n            count=VALUES(count),\n            percentOfTotal=VALUES(percentOfTotal);\n          '
          });
        }).then(function () {
          return _this7.query({
            queryString: '\n            SELECT * FROM contribution_frequency;\n          '
          });
        }).then(function (contributionFrequency) {
          resolve(contributionFrequency);
        }).catch(function (error) {
          reject(error);
        });
      });
    }
  }, {
    key: 'updateTotalSupply',
    value: function updateTotalSupply(_ref7) {
      var _this8 = this;

      var contribution = _ref7.contribution;

      return new _bluebird2.default(function (resolve, reject) {
        var date = contribution.date;

        _this8.query({
          queryString: '\n          CREATE TABLE IF NOT EXISTS total_supply (\n            totalSupply    BIGINT NOT NULL DEFAULT 0,\n            date           BIGINT NOT NULL DEFAULT 0 PRIMARY KEY\n          );\n        '
        }).then(function () {
          return _this8.query({
            queryString: '\n            INSERT INTO total_supply (\n              totalSupply,\n              date\n            ) VALUES (\n              (SELECT (sum(value)+sum(reservedValue)) FROM contributions WHERE date <= ' + date + '),\n              ' + date + '\n            ) ;\n          '
          });
        }).then(function () {
          return _this8.query({
            queryString: '\n            SELECT * FROM total_supply ORDER BY date DESC LIMIT 1;\n          '
          });
        }).then(function (totalSupply) {
          resolve(totalSupply[0]);
        }).catch(function (error) {
          _this8.handleError({ error: error });
        });
      });
    }
  }, {
    key: 'updateLeaderboard',
    value: function updateLeaderboard(_ref8) {
      var _this9 = this;

      var contribution = _ref8.contribution;

      return new _bluebird2.default(function (resolve, reject) {
        var username = contribution.username,
            contributor = contribution.contributor;

        _this9.query({ queryString: '\n        CREATE TABLE IF NOT EXISTS leaderboard (\n          username             CHARACTER(42) PRIMARY KEY,\n          contributorAddress   CHARACTER(42),\n          value                BIGINT NOT NULL DEFAULT 0,\n          latestContribution   BIGINT NOT NULL DEFAULT 0,\n          numContributions     BIGINT NOT NULL DEFAULT 0,\n          valuePerContribution REAL\n        );\n      ' }).then(function () {
          return _this9.query({ queryString: '\n            INSERT INTO leaderboard (\n              username,\n              contributorAddress,\n              value,\n              latestContribution,\n              numContributions,\n              valuePerContribution\n            ) VALUES (\n              "' + username + '",\n              "' + contribution['contributor'] + '",\n              (SELECT sum(value) FROM contributions WHERE username = "' + username + '"),\n              (SELECT max(date) FROM contributions WHERE username = "' + username + '"),\n              (SELECT count(*) FROM contributions WHERE username = "' + username + '"),\n              (SELECT sum(value)/count(*) FROM contributions WHERE username = "' + username + '")\n            ) ON DUPLICATE KEY UPDATE\n              value=VALUES(value),\n              latestContribution=VALUES(latestContribution),\n              numContributions=VALUES(numContributions),\n              valuePerContribution=VALUES(valuePerContribution)\n            ;\n          ' });
        }).then(function () {
          // Replace "0x0" with contract address;
          return _this9.query({ queryString: '\n            INSERT INTO leaderboard (\n              username,\n              contributorAddress,\n              value,\n              latestContribution,\n              numContributions,\n              valuePerContribution\n            ) VALUES (\n              "Total",\n              "' + _this9.contractDetails['address'] + '",\n              (SELECT sum(value)+sum(reservedValue) FROM contributions),\n              (SELECT max(date) FROM contributions),\n              (SELECT count(*) FROM contributions),\n              (SELECT (sum(value)+sum(reservedValue))/count(*) FROM contributions)\n            ) ON DUPLICATE KEY UPDATE\n              value=VALUES(value),\n              latestContribution=VALUES(latestContribution),\n              numContributions=VALUES(numContributions),\n              valuePerContribution=VALUES(valuePerContribution)\n            ;\n          '
          });
        }).then(function () {
          return _this9.query({ queryString: '\n          SELECT * FROM leaderboard;\n        ' });
        }).then(function (leaderboard) {
          resolve(leaderboard);
        }).catch(function (error) {
          _this9.handleError({ error: error });
        });
      });
    }
  }, {
    key: 'saveContributionEvent',
    value: function saveContributionEvent(_ref9) {
      var _this10 = this;

      var event = _ref9.event;

      return new _bluebird2.default(function (resolve, reject) {
        var transactionHash = event.transactionHash,
            args = event.args;

        _this10.query({
          queryString: '\n          CREATE TABLE IF NOT EXISTS contributions (\n            txHash          CHARACTER(66) PRIMARY KEY,\n            contributor     CHARACTER(42),\n            username        CHARACTER(42),\n            value           BIGINT NOT NULL DEFAULT 0,\n            reservedValue   BIGINT NOT NULL DEFAULT 0,\n            date            BIGINT NOT NULL DEFAULT 0,\n            rewardType      CHARACTER(42)\n          ) ENGINE = INNODB;\n        '
        }).then(function () {
          return _this10.query({
            queryString: '\n            INSERT INTO contributions (\n              txHash,\n              contributor,\n              username,\n              value,\n              reservedValue,\n              date,\n              rewardType\n            ) VALUES (\n              "' + transactionHash + '",\n              "' + args['contributor'] + '",\n              "' + args['username'] + '",\n              ' + args['value'].toNumber() + ',\n              ' + args['reservedValue'].toNumber() + ',\n              ' + args['date'].toNumber() + ',\n              "' + args['rewardType'] + '"\n            );\n          '
          });
        }).then(function () {
          return _this10.query({
            queryString: '\n            SELECT * FROM contributions WHERE txHash = "' + transactionHash + '";\n          '
          });
        }).then(function (result) {
          resolve(result[0]);
        }).catch(function (error) {
          _this10.handleError({ error: error, method: 'saveContributionEvent' });
        });
      });
    }
  }, {
    key: 'getContractDetails',
    value: function getContractDetails() {
      var _this11 = this;

      return new _bluebird2.default(function (resolve, reject) {
        (0, _bluebird.join)(_this11.contract.name.callAsync(), _this11.contract.symbol.callAsync(), _this11.contract.decimals.callAsync(), _this11.contract.organization.callAsync()).then(function (data) {
          _this11.contractDetails = {
            name: data[0],
            symbol: data[1],
            decimals: data[2],
            organization: data[3],
            address: _this11.contract.address
          };

          resolve({ contractDetails: _this11.contractDetails });
        }).catch(function (error) {
          _this11.handleError({ error: error, method: 'getContractDetails' });
        });
      });
    }
  }, {
    key: 'listen',
    value: function listen() {
      var _this12 = this;

      console.log('GitToken Analytics Listening on Separate Process: ', process.pid);
      process.on('message', function (msg) {
        var _JSON$parse2 = JSON.parse(msg),
            event = _JSON$parse2.event,
            data = _JSON$parse2.data;

        switch (event) {
          case 'configure':
            var web3Provider = data.web3Provider,
                mysqlOpts = data.mysqlOpts,
                contractAddress = data.contractAddress;

            _this12.configure({ web3Provider: web3Provider, mysqlOpts: mysqlOpts, contractAddress: contractAddress, abi: abi }).then(function (configured) {
              process.send(JSON.stringify({ event: event, data: configured, message: 'GitToken Analytics Processor Configured' }));
            });
            break;
          case 'contract_details':
            _this12.getContractDetails().then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: 'Contract details retrieved.' }));
            });
            break;
          default:
            process.send(JSON.stringify({
              message: 'Unhandled Analytics Event',
              data: [],
              event: 'error'
            }));
        }
      });
    }
  }, {
    key: 'handleError',
    value: function handleError(_ref10) {
      var error = _ref10.error,
          method = _ref10.method;

      /**
       * TODO Add switch case handler based on error codes, etc.
       * Determine when to send back message to parent process
       */
      console.log('handleError::method', method);
      console.log(error);
    }
  }]);

  return GitTokenAnalytics;
}();

exports.default = GitTokenAnalytics;