'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _web = require('web3');

var _web2 = _interopRequireDefault(_web);

var _mysql = require('mysql');

var _mysql2 = _interopRequireDefault(_mysql);

var _updateTokenInflationRate = require('./updateTokenInflationRate');

var _updateTokenInflationRate2 = _interopRequireDefault(_updateTokenInflationRate);

var _updateInflationRateAverage = require('./updateInflationRateAverage');

var _updateInflationRateAverage2 = _interopRequireDefault(_updateInflationRateAverage);

var _updateLeaderboard = require('./updateLeaderboard');

var _updateLeaderboard2 = _interopRequireDefault(_updateLeaderboard);

var _updateTotalSupply = require('./updateTotalSupply');

var _updateTotalSupply2 = _interopRequireDefault(_updateTotalSupply);

var _updateContributionFrequency = require('./updateContributionFrequency');

var _updateContributionFrequency2 = _interopRequireDefault(_updateContributionFrequency);

var _updateSummaryStatistics = require('./updateSummaryStatistics');

var _updateSummaryStatistics2 = _interopRequireDefault(_updateSummaryStatistics);

var _saveContributionEvent = require('./saveContributionEvent');

var _saveContributionEvent2 = _interopRequireDefault(_saveContributionEvent);

var _updateRewardTypeStats = require('./updateRewardTypeStats');

var _updateRewardTypeStats2 = _interopRequireDefault(_updateRewardTypeStats);

var _updateUserTokenCreation = require('./updateUserTokenCreation');

var _updateUserTokenCreation2 = _interopRequireDefault(_updateUserTokenCreation);

var _milestoneCreated = require('./milestoneCreated');

var _milestoneCreated2 = _interopRequireDefault(_milestoneCreated);

var _milestoneCompleted = require('./milestoneCompleted');

var _milestoneCompleted2 = _interopRequireDefault(_milestoneCompleted);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* babel-plugin-inline-import 'gittoken-contracts/build/contracts/GitToken.json' */var GitTokenContract = '{\n  "contract_name": "GitToken",\n  "abi": [\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_initialPrice",\n          "type": "uint256"\n        },\n        {\n          "name": "_delay",\n          "type": "uint256"\n        },\n        {\n          "name": "_tokenLimitFactor",\n          "type": "uint256"\n        },\n        {\n          "name": "_lockTokens",\n          "type": "bool"\n        }\n      ],\n      "name": "initializeAuction",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "name",\n      "outputs": [\n        {\n          "name": "_name",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_spender",\n          "type": "address"\n        },\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "name": "approve",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "totalSupply",\n      "outputs": [\n        {\n          "name": "_supply",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_username",\n          "type": "string"\n        }\n      ],\n      "name": "getContributorAddress",\n      "outputs": [\n        {\n          "name": "_contributorAddress",\n          "type": "address"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_from",\n          "type": "address"\n        },\n        {\n          "name": "_to",\n          "type": "address"\n        },\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "name": "transferFrom",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "organization",\n      "outputs": [\n        {\n          "name": "_organization",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "decimals",\n      "outputs": [\n        {\n          "name": "_decimals",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "getTokenLockUntilDate",\n      "outputs": [\n        {\n          "name": "_lockedUntil",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_contributorAddress",\n          "type": "address"\n        }\n      ],\n      "name": "getContributorUsername",\n      "outputs": [\n        {\n          "name": "_username",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_rewardValue",\n          "type": "uint256"\n        },\n        {\n          "name": "_rewardType",\n          "type": "string"\n        }\n      ],\n      "name": "setRewardValue",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "",\n          "type": "address"\n        }\n      ],\n      "name": "owner",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_holder",\n          "type": "address"\n        }\n      ],\n      "name": "balanceOf",\n      "outputs": [\n        {\n          "name": "_balance",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_username",\n          "type": "string"\n        }\n      ],\n      "name": "getUnclaimedRewards",\n      "outputs": [\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_rewardType",\n          "type": "string"\n        },\n        {\n          "name": "_reservedType",\n          "type": "string"\n        }\n      ],\n      "name": "getRewardDetails",\n      "outputs": [\n        {\n          "name": "_rewardValue",\n          "type": "uint256"\n        },\n        {\n          "name": "_reservedValue",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "symbol",\n      "outputs": [\n        {\n          "name": "_symbol",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_to",\n          "type": "address"\n        },\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "name": "transfer",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_auctionRound",\n          "type": "uint256"\n        },\n        {\n          "name": "_exchangeRate",\n          "type": "uint256"\n        }\n      ],\n      "name": "executeBid",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": true,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_reservedValue",\n          "type": "uint256"\n        },\n        {\n          "name": "_rewardType",\n          "type": "string"\n        },\n        {\n          "name": "_reservedType",\n          "type": "string"\n        }\n      ],\n      "name": "setReservedValue",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_contributor",\n          "type": "address"\n        },\n        {\n          "name": "_username",\n          "type": "string"\n        }\n      ],\n      "name": "verifyContributor",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_owner",\n          "type": "address"\n        },\n        {\n          "name": "_spender",\n          "type": "address"\n        }\n      ],\n      "name": "allowance",\n      "outputs": [\n        {\n          "name": "_allowance",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_username",\n          "type": "string"\n        },\n        {\n          "name": "_rewardType",\n          "type": "string"\n        },\n        {\n          "name": "_reservedType",\n          "type": "string"\n        },\n        {\n          "name": "_rewardBonus",\n          "type": "uint256"\n        },\n        {\n          "name": "_deliveryID",\n          "type": "string"\n        }\n      ],\n      "name": "rewardContributor",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "auctionRound",\n          "type": "uint256"\n        }\n      ],\n      "name": "getAuctionDetails",\n      "outputs": [\n        {\n          "name": "",\n          "type": "uint256[11]"\n        },\n        {\n          "name": "",\n          "type": "uint256[]"\n        },\n        {\n          "name": "",\n          "type": "uint256[]"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "newOwner",\n          "type": "address"\n        }\n      ],\n      "name": "transferOwnership",\n      "outputs": [],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "inputs": [\n        {\n          "name": "_contributor",\n          "type": "address"\n        },\n        {\n          "name": "_name",\n          "type": "string"\n        },\n        {\n          "name": "_username",\n          "type": "string"\n        },\n        {\n          "name": "_organization",\n          "type": "string"\n        },\n        {\n          "name": "_symbol",\n          "type": "string"\n        },\n        {\n          "name": "_decimals",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "constructor"\n    },\n    {\n      "payable": false,\n      "type": "fallback"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "owner",\n          "type": "address"\n        },\n        {\n          "indexed": true,\n          "name": "spender",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        }\n      ],\n      "name": "Approval",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "from",\n          "type": "address"\n        },\n        {\n          "indexed": true,\n          "name": "to",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        }\n      ],\n      "name": "Transfer",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "contributor",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "username",\n          "type": "string"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        },\n        {\n          "indexed": false,\n          "name": "reservedValue",\n          "type": "uint256"\n        },\n        {\n          "indexed": false,\n          "name": "date",\n          "type": "uint256"\n        },\n        {\n          "indexed": false,\n          "name": "rewardType",\n          "type": "string"\n        }\n      ],\n      "name": "Contribution",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "contributor",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "username",\n          "type": "string"\n        },\n        {\n          "indexed": false,\n          "name": "date",\n          "type": "uint256"\n        }\n      ],\n      "name": "ContributorVerified",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": false,\n          "name": "rewardType",\n          "type": "string"\n        },\n        {\n          "indexed": false,\n          "name": "reservedType",\n          "type": "string"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        },\n        {\n          "indexed": false,\n          "name": "date",\n          "type": "uint256"\n        }\n      ],\n      "name": "RewardValueSet",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": false,\n          "name": "auctionDetails",\n          "type": "uint256[8]"\n        }\n      ],\n      "name": "Auction",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": false,\n          "name": "bidDetails",\n          "type": "uint256[9]"\n        }\n      ],\n      "name": "AuctionBid",\n      "type": "event"\n    }\n  ],\n  "unlinked_binary": "",\n  "networks": {\n    "17": {\n      "links": {},\n      "events": {\n        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "owner",\n              "type": "address"\n            },\n            {\n              "indexed": true,\n              "name": "spender",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            }\n          ],\n          "name": "Approval",\n          "type": "event"\n        },\n        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "from",\n              "type": "address"\n            },\n            {\n              "indexed": true,\n              "name": "to",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            }\n          ],\n          "name": "Transfer",\n          "type": "event"\n        },\n        "0x270e8b0620bd7a85855d0ae9401e7fa30ea6319fbf06c05f38cad80875f1cc01": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "contributor",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "username",\n              "type": "string"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "reservedValue",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "date",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "rewardType",\n              "type": "string"\n            }\n          ],\n          "name": "Contribution",\n          "type": "event"\n        },\n        "0xce96c271d8db9db4a90e538f30d7ec5a63f116893c4636688d9ce1502b5cc936": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "contributor",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "username",\n              "type": "string"\n            },\n            {\n              "indexed": false,\n              "name": "date",\n              "type": "uint256"\n            }\n          ],\n          "name": "ContributorVerified",\n          "type": "event"\n        },\n        "0xbab878453bea46cf2222f6dd20b3fa8d80dc6ca2b5d4f854173f07227a21e1a6": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "rewardType",\n              "type": "string"\n            },\n            {\n              "indexed": false,\n              "name": "reservedType",\n              "type": "string"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "date",\n              "type": "uint256"\n            }\n          ],\n          "name": "RewardValueSet",\n          "type": "event"\n        },\n        "0xf2c93682ed3c2de57c1a5b8d87987bc473b3c43950036e9b69234c19b24473ea": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "auctionDetails",\n              "type": "uint256[8]"\n            }\n          ],\n          "name": "Auction",\n          "type": "event"\n        },\n        "0x71e9115058326fa6f488debb25321c912f2e9df24f42a99f4a976822672ffee4": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "bidDetails",\n              "type": "uint256[9]"\n            }\n          ],\n          "name": "AuctionBid",\n          "type": "event"\n        }\n      },\n      "updated_at": 1503077263640\n    }\n  },\n  "schema_version": "0.0.5",\n  "updated_at": 1503077263640\n}';

// const { abi } = JSON.parse(GitTokenContract)

var GitTokenAnalytics = function () {
  /**
   * GitToken Analytics Constructor Options
   * @param  {Object} options { mysql: { ...} }
   */
  function GitTokenAnalytics(options) {
    var _this = this;

    _classCallCheck(this, GitTokenAnalytics);

    this.listen();
    var web3Provider = options.web3Provider,
        mysqlOpts = options.mysqlOpts,
        contractAddress = options.contractAddress,
        abi = options.abi;


    this.saveContributionEvent = _saveContributionEvent2.default.bind(this);
    this.updateLeaderboard = _updateLeaderboard2.default.bind(this);
    this.updateTotalSupply = _updateTotalSupply2.default.bind(this);
    this.updateContributionFrequency = _updateContributionFrequency2.default.bind(this);
    this.updateSummaryStatistics = _updateSummaryStatistics2.default.bind(this);
    this.updateTokenInflationRate = _updateTokenInflationRate2.default.bind(this);
    this.updateInflationRateAverage = _updateInflationRateAverage2.default.bind(this);
    this.updateRewardTypeStats = _updateRewardTypeStats2.default.bind(this);
    this.updateUserTokenCreation = _updateUserTokenCreation2.default.bind(this);

    this.milestoneCreated = _milestoneCreated2.default.bind(this);
    this.milestoneCompleted = _milestoneCompleted2.default.bind(this);

    this.contractDetails = {};

    if (web3Provider && mysqlOpts && contractAddress && abi) {
      this.configure({ web3Provider: web3Provider, mysqlOpts: mysqlOpts, contractAddress: contractAddress, abi: abi }).then(function (configured) {
        console.log('GitToken Analytics Processor Configured');
        console.log(JSON.stringify(configured, null, 2));
        _this._watchContributionEvents();
      });
    } else {
      console.log('GitToken Analytics Processor listening for \'configure\' event.');
    }
  }

  _createClass(GitTokenAnalytics, [{
    key: 'configure',
    value: function configure(_ref) {
      var _this2 = this;

      var web3Provider = _ref.web3Provider,
          mysqlOpts = _ref.mysqlOpts,
          contractAddress = _ref.contractAddress,
          abi = _ref.abi;

      return new _bluebird2.default(function (resolve, reject) {
        _this2.establishMySqlConnection({ mysqlOpts: mysqlOpts }).then(function () {
          return _this2.configureWeb3Provider({ web3Provider: web3Provider });
        }).then(function () {
          return _this2.configureContract({ abi: abi, contractAddress: contractAddress });
        }).then(function (contract) {
          return _this2.getContractDetails();
        }).then(function () {
          // console.log('this.contractDetails', this.contractDetails)
          resolve({
            contractDetails: _this2.contractDetails
          });
        }).catch(function (error) {
          console.log('error', error);
          _this2.handleError({ error: error, method: 'configure' });
        });
      });
    }
  }, {
    key: 'establishMySqlConnection',
    value: function establishMySqlConnection(_ref2) {
      var _this3 = this;

      var mysqlOpts = _ref2.mysqlOpts;

      return new _bluebird2.default(function (resolve, reject) {
        try {
          _this3.mysql = _mysql2.default.createConnection(_extends({}, mysqlOpts));
          _this3.mysql.connect();
          resolve({ mysql: _this3.mysql });
        } catch (error) {
          _this3.handleError({ error: error, method: 'establishMySqlConnection' });
        }
      });
    }
  }, {
    key: 'query',
    value: function query(_ref3) {
      var _this4 = this;

      var queryString = _ref3.queryString,
          _ref3$queryObject = _ref3.queryObject,
          queryObject = _ref3$queryObject === undefined ? [] : _ref3$queryObject;

      return new _bluebird2.default(function (resolve, reject) {
        /* TODO: Check mysql docs for second param (queryObject) */
        _this4.mysql.query(queryString, function (error, result) {
          if (error) {
            _this4.handleError({ error: error, method: 'query' });
          }
          resolve(result);
        });
      });
    }
  }, {
    key: 'configureWeb3Provider',
    value: function configureWeb3Provider(_ref4) {
      var _this5 = this;

      var web3Provider = _ref4.web3Provider;

      return new _bluebird2.default(function (resolve, reject) {
        try {
          console.log('web3Provider', web3Provider);
          _this5.web3 = new _web2.default(new _web2.default.providers.HttpProvider(web3Provider));
          _this5.eth = (0, _bluebird.promisifyAll)(_this5.web3.eth);
          resolve({ web3: _this5.web3, eth: _this5.eth });
        } catch (error) {
          _this5.handleError({ error: error, method: 'configureWeb3Provider' });
        }
      });
    }
  }, {
    key: 'configureContract',
    value: function configureContract(_ref5) {
      var _this6 = this;

      var abi = _ref5.abi,
          contractAddress = _ref5.contractAddress;

      return new _bluebird2.default(function (resolve, reject) {
        _this6.contract = _this6.web3.eth.contract(abi).at(contractAddress);
        _bluebird2.default.resolve(Object.keys(_this6.contract)).map(function (method) {
          if (_this6.contract[method] && _this6.contract[method]['request']) {
            _this6.contract[method] = (0, _bluebird.promisifyAll)(_this6.contract[method]);
          }
        }).then(function () {
          resolve(_this6.contract);
        }).catch(function (error) {
          _this6.handleError({ error: error, method: 'configureContract' });
        });
      });
    }
  }, {
    key: '_watchContributionEvents',
    value: function _watchContributionEvents() {
      var _this7 = this;

      var events = this.contract.Contribution({}, { fromBlock: 0, toBlock: 'latest' });

      events.watch(function (error, result) {
        if (error) {
          _this7.handleError({ error: error, method: '_watchContributionEvents' });
        }
        console.log('_watchContributionEvents::result', result);
        _this7.saveContributionEvent({ event: result }).then(function (contribution) {
          process.send(JSON.stringify({
            event: 'new_contribution',
            data: contribution,
            message: 'New contribution received and saved.'
          }));
          return (0, _bluebird.join)(_this7.updateLeaderboard({ contribution: contribution }), _this7.updateTotalSupply({ contribution: contribution }), _this7.updateContributionFrequency({ contribution: contribution }), _this7.updateTokenInflationRate({ contribution: contribution }), _this7.updateInflationRateAverage({ contribution: contribution }), _this7.updateSummaryStatistics({ contribution: contribution }), _this7.updateRewardTypeStats({ contribution: contribution }), _this7.updateUserTokenCreation({ contribution: contribution }));
        }).then(function (data) {
          // console.log(JSON.stringify(data, null, 2))
          process.send(JSON.stringify({
            event: 'broadcast_contribution_data',
            message: 'Analytics updated on new contribution event.',
            data: data
          }));
        });
      });
    }
  }, {
    key: 'getContractDetails',
    value: function getContractDetails() {
      var _this8 = this;

      return new _bluebird2.default(function (resolve, reject) {
        (0, _bluebird.join)(_this8.contract.name.callAsync(), _this8.contract.symbol.callAsync(), _this8.contract.decimals.callAsync(), _this8.contract.organization.callAsync()).then(function (data) {
          // console.log('getContractDetails::data', data)
          try {
            _this8.contractDetails = {
              name: data[0],
              symbol: data[1],
              decimals: data[2].toNumber(),
              organization: data[3],
              address: _this8.contract.address
            };
            resolve({ contractDetails: _this8.contractDetails });
          } catch (error) {
            throw error;
          }
        }).catch(function (error) {
          console.log('contractDetails::error', error);
          _this8.handleError({ error: error, method: 'getContractDetails' });
        });
      });
    }
  }, {
    key: 'listen',
    value: function listen() {
      var _this9 = this;

      console.log('GitToken Analytics Listening on Separate Process: ', process.pid);
      process.on('message', function (msg) {
        // console.log('msg', msg)
        var _JSON$parse = JSON.parse(msg),
            event = _JSON$parse.event,
            data = _JSON$parse.data;

        switch (event) {
          case 'configure':
            var web3Provider = data.web3Provider,
                mysqlOpts = data.mysqlOpts,
                contractAddress = data.contractAddress,
                abi = data.abi;
            // console.log('listen::contractAddress, abi', contractAddress, abi)

            _this9.configure({
              web3Provider: web3Provider,
              mysqlOpts: mysqlOpts,
              contractAddress: contractAddress,
              abi: abi
            }).then(function (configured) {
              process.send(JSON.stringify({ event: event, data: configured, message: 'GitToken Analytics Processor Configured' }));
              _this9._watchContributionEvents();
            });
            break;
          case 'contract_details':
            _this9.getContractDetails().then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: 'Contract details retrieved.' }));
            });
            break;
          case 'get_contributions':
            _this9.query({ queryString: 'SELECT * FROM contributions;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_total_supply':
            _this9.query({ queryString: 'SELECT * FROM total_supply;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_leaderboard':
            _this9.query({ queryString: 'SELECT * FROM leaderboard;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_contribution_frequency':
            _this9.query({ queryString: 'SELECT * FROM contribution_frequency;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_token_inflation':
            _this9.query({ queryString: 'SELECT * FROM token_inflation;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_token_inflation_mean':
            _this9.query({ queryString: 'SELECT * FROM token_inflation_mean;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_user_token_creation':
            _this9.query({ queryString: 'SELECT * FROM user_token_creation;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_reward_type_stats':
            _this9.query({ queryString: 'SELECT * FROM reward_type_stats;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_summary_statistics':
            _this9.query({ queryString: 'SELECT * FROM summary_statistics;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_milestones':
            _this9.query({ queryString: 'SELECT * FROM milestones;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'milestone_created':
            _this9.milestoneCreated({ data: data }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'milestone_closed':
            _this9.milestoneCompleted({ data: data }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          default:
            process.send(JSON.stringify({
              message: 'Unhandled Analytics Event',
              data: [],
              event: 'error'
            }));
        }
      });
    }
  }, {
    key: 'handleError',
    value: function handleError(_ref6) {
      var error = _ref6.error,
          method = _ref6.method;

      /**
       * TODO Add switch case handler based on error codes, etc.
       * Determine when to send back message to parent process
       */
      console.log('handleError::method', method);
      console.log(error);
    }
  }]);

  return GitTokenAnalytics;
}();

exports.default = GitTokenAnalytics;