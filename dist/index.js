'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _bluebird = require('bluebird');

var _bluebird2 = _interopRequireDefault(_bluebird);

var _web = require('web3');

var _web2 = _interopRequireDefault(_web);

var _mysql = require('mysql');

var _mysql2 = _interopRequireDefault(_mysql);

var _updateTokenInflationRate = require('./updateTokenInflationRate');

var _updateTokenInflationRate2 = _interopRequireDefault(_updateTokenInflationRate);

var _updateInflationRateAverage = require('./updateInflationRateAverage');

var _updateInflationRateAverage2 = _interopRequireDefault(_updateInflationRateAverage);

var _updateLeaderboard = require('./updateLeaderboard');

var _updateLeaderboard2 = _interopRequireDefault(_updateLeaderboard);

var _updateTotalSupply = require('./updateTotalSupply');

var _updateTotalSupply2 = _interopRequireDefault(_updateTotalSupply);

var _updateContributionFrequency = require('./updateContributionFrequency');

var _updateContributionFrequency2 = _interopRequireDefault(_updateContributionFrequency);

var _updateSummaryStatistics = require('./updateSummaryStatistics');

var _updateSummaryStatistics2 = _interopRequireDefault(_updateSummaryStatistics);

var _saveContributionEvent = require('./saveContributionEvent');

var _saveContributionEvent2 = _interopRequireDefault(_saveContributionEvent);

var _updateRewardTypeStats = require('./updateRewardTypeStats');

var _updateRewardTypeStats2 = _interopRequireDefault(_updateRewardTypeStats);

var _updateUserTokenCreation = require('./updateUserTokenCreation');

var _updateUserTokenCreation2 = _interopRequireDefault(_updateUserTokenCreation);

var _milestoneCreated = require('./milestoneCreated');

var _milestoneCreated2 = _interopRequireDefault(_milestoneCreated);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/* babel-plugin-inline-import 'gittoken-contracts/build/contracts/GitToken.json' */var GitTokenContract = '{\n  "contract_name": "GitToken",\n  "abi": [\n    {\n      "constant": false,\n      "inputs": [],\n      "name": "name",\n      "outputs": [\n        {\n          "name": "_name",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_spender",\n          "type": "address"\n        },\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "name": "approve",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "totalSupply",\n      "outputs": [\n        {\n          "name": "_supply",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_username",\n          "type": "string"\n        }\n      ],\n      "name": "getContributorAddress",\n      "outputs": [\n        {\n          "name": "_contributorAddress",\n          "type": "address"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_from",\n          "type": "address"\n        },\n        {\n          "name": "_to",\n          "type": "address"\n        },\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "name": "transferFrom",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [],\n      "name": "organization",\n      "outputs": [\n        {\n          "name": "_organization",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [],\n      "name": "decimals",\n      "outputs": [\n        {\n          "name": "_decimals",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_contributorAddress",\n          "type": "address"\n        }\n      ],\n      "name": "getContributorUsername",\n      "outputs": [\n        {\n          "name": "_username",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_rewardValue",\n          "type": "uint256"\n        },\n        {\n          "name": "_rewardType",\n          "type": "string"\n        }\n      ],\n      "name": "setRewardValue",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "",\n          "type": "address"\n        }\n      ],\n      "name": "owner",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_holder",\n          "type": "address"\n        }\n      ],\n      "name": "balanceOf",\n      "outputs": [\n        {\n          "name": "_balance",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_username",\n          "type": "string"\n        }\n      ],\n      "name": "getUnclaimedRewards",\n      "outputs": [\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_rewardType",\n          "type": "string"\n        },\n        {\n          "name": "_reservedType",\n          "type": "string"\n        }\n      ],\n      "name": "getRewardDetails",\n      "outputs": [\n        {\n          "name": "_rewardValue",\n          "type": "uint256"\n        },\n        {\n          "name": "_reservedValue",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [],\n      "name": "symbol",\n      "outputs": [\n        {\n          "name": "_symbol",\n          "type": "string"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_to",\n          "type": "address"\n        },\n        {\n          "name": "_value",\n          "type": "uint256"\n        }\n      ],\n      "name": "transfer",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_reservedValue",\n          "type": "uint256"\n        },\n        {\n          "name": "_rewardType",\n          "type": "string"\n        },\n        {\n          "name": "_reservedType",\n          "type": "string"\n        }\n      ],\n      "name": "setReservedValue",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_contributor",\n          "type": "address"\n        },\n        {\n          "name": "_username",\n          "type": "string"\n        }\n      ],\n      "name": "verifyContributor",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": true,\n      "inputs": [\n        {\n          "name": "_owner",\n          "type": "address"\n        },\n        {\n          "name": "_spender",\n          "type": "address"\n        }\n      ],\n      "name": "allowance",\n      "outputs": [\n        {\n          "name": "_allowance",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "_username",\n          "type": "string"\n        },\n        {\n          "name": "_rewardType",\n          "type": "string"\n        },\n        {\n          "name": "_reservedType",\n          "type": "string"\n        },\n        {\n          "name": "_rewardBonus",\n          "type": "uint256"\n        },\n        {\n          "name": "_deliveryID",\n          "type": "string"\n        }\n      ],\n      "name": "rewardContributor",\n      "outputs": [\n        {\n          "name": "",\n          "type": "bool"\n        }\n      ],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "constant": false,\n      "inputs": [\n        {\n          "name": "newOwner",\n          "type": "address"\n        }\n      ],\n      "name": "transferOwnership",\n      "outputs": [],\n      "payable": false,\n      "type": "function"\n    },\n    {\n      "inputs": [\n        {\n          "name": "_contributor",\n          "type": "address"\n        },\n        {\n          "name": "_name",\n          "type": "string"\n        },\n        {\n          "name": "_username",\n          "type": "string"\n        },\n        {\n          "name": "_organization",\n          "type": "string"\n        },\n        {\n          "name": "_symbol",\n          "type": "string"\n        },\n        {\n          "name": "_decimals",\n          "type": "uint256"\n        }\n      ],\n      "payable": false,\n      "type": "constructor"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "owner",\n          "type": "address"\n        },\n        {\n          "indexed": true,\n          "name": "spender",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        }\n      ],\n      "name": "Approval",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "from",\n          "type": "address"\n        },\n        {\n          "indexed": true,\n          "name": "to",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        }\n      ],\n      "name": "Transfer",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "contributor",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "username",\n          "type": "string"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        },\n        {\n          "indexed": false,\n          "name": "reservedValue",\n          "type": "uint256"\n        },\n        {\n          "indexed": false,\n          "name": "date",\n          "type": "uint256"\n        },\n        {\n          "indexed": false,\n          "name": "rewardType",\n          "type": "string"\n        }\n      ],\n      "name": "Contribution",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": true,\n          "name": "contributor",\n          "type": "address"\n        },\n        {\n          "indexed": false,\n          "name": "username",\n          "type": "string"\n        },\n        {\n          "indexed": false,\n          "name": "date",\n          "type": "uint256"\n        }\n      ],\n      "name": "ContributorVerified",\n      "type": "event"\n    },\n    {\n      "anonymous": false,\n      "inputs": [\n        {\n          "indexed": false,\n          "name": "rewardType",\n          "type": "string"\n        },\n        {\n          "indexed": false,\n          "name": "reservedType",\n          "type": "string"\n        },\n        {\n          "indexed": false,\n          "name": "value",\n          "type": "uint256"\n        },\n        {\n          "indexed": false,\n          "name": "date",\n          "type": "uint256"\n        }\n      ],\n      "name": "RewardValueSet",\n      "type": "event"\n    }\n  ],\n  "unlinked_binary": "0x606060405234156200001057600080fd5b60405162003e2038038062003e2083398101604052808051919060200180518201919060200180518201919060200180518201919060200180518201919060200180519150505b5b600160a060020a0333166000908152602081905260409020805460ff191660011790555b620000976001826401000000006200250f6200023982021704565b1515620000a357600080fd5b620000be60018264010000000062002e8862000bb282021704565b1515620000ca57600080fd5b600160a060020a03861615620000fe57600160a060020a0386166000908152602081905260409020805460ff191660011790555b600060015560038580516200011892916020019062000d32565b5060048380516200012e92916020019062000d32565b5060058280516200014492916020019062000d32565b506002819055600160a060020a03331660009081526008602052604090208480516200017592916020019062000d32565b50600160a060020a0386166000908152600860205260409020848051620001a192916020019062000d32565b50856009856040518082805190602001908083835b60208310620001d857805182525b601f199092019160209182019101620001b6565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040519081900390208054600160a060020a031916600160a060020a03929092169190911790555b5b5b50505050505062000ddc565b600081600a0a6109c402836005016040517f70696e6700000000000000000000000000000000000000000000000000000000815260048101919091526024016040519081900390205560fa600a83900a02600584016040517f636f6d6d69745f636f6d6d656e740000000000000000000000000000000000008152600e810191909152602e01604051908190039020556109c4600a83900a02600584016040517f637265617465000000000000000000000000000000000000000000000000000081526006810191909152602601604051908190039020556000600584016040517f64656c65746500000000000000000000000000000000000000000000000000008152600681019190915260260160405190819003902055611388600a83900a02600584016040517f6465706c6f796d656e74000000000000000000000000000000000000000000008152600a810191909152602a01604051908190039020556064600a83900a02600584016040517f6465706c6f796d656e745f7374617475730000000000000000000000000000008152601181019190915260310160405190819003902055611388600a83900a02600584016040517f666f726b0000000000000000000000000000000000000000000000000000000081526004810191909152602401604051908190039020556064600a83900a02600584016040517f676f6c6c756d0000000000000000000000000000000000000000000000000000815260068101919091526026016040519081900390205560fa600a83900a02600584016040517f696e7374616c6c6174696f6e00000000000000000000000000000000000000008152600c810191909152602c01604051908190039020556103e8600a83900a02600584016040517f696e7374616c6c6174696f6e5f7265706f7369746f7269657300000000000000815260198101919091526039016040519081900390205560fa600a83900a02600584016040517f69737375655f636f6d6d656e74000000000000000000000000000000000000008152600d810191909152602d01604051908190039020556101f4600a83900a02600584016040517f697373756573000000000000000000000000000000000000000000000000000081526006810191909152602601604051908190039020556064600a83900a02600584016040517f6c6162656c00000000000000000000000000000000000000000000000000000081526005810191909152602501604051908190039020556000600584016040517f6d61726b6574706c6163655f707572636861736573000000000000000000000081526015810191909152603501604051908190039020556103e8600a83900a02600584016040517f6d656d626572000000000000000000000000000000000000000000000000000081526006810191909152602601604051908190039020556103e8600a83900a02600584016040517f6d656d62657273686970000000000000000000000000000000000000000000008152600a810191909152602a016040519081900390205560fa600a83900a02600584016040517f6d696c6573746f6e65000000000000000000000000000000000000000000000081526009810191909152602901604051908190039020556103e8600a83900a02600584016040517f6f7267616e697a6174696f6e00000000000000000000000000000000000000008152600c810191909152602c01604051908190039020556000600584016040517f6f72675f626c6f636b000000000000000000000000000000000000000000000081526009810191909152602901604051908190039020556101f4600a83900a02600584016040517f706167655f6275696c64000000000000000000000000000000000000000000008152600a810191909152602a016040519081900390205560fa600a83900a02600584016040517f70726f6a6563745f6361726400000000000000000000000000000000000000008152600c810191909152602c01604051908190039020556032600a83900a02600584016040517f70726f6a6563745f636f6c756d6e0000000000000000000000000000000000008152600e810191909152602e01604051908190039020556103e8600a83900a02600584016040517f70726f6a656374000000000000000000000000000000000000000000000000008152600781019190915260270160405190819003902055612710600a83900a02600584016040517f7075626c69630000000000000000000000000000000000000000000000000000815260068101919091526026016040519081900390205560fa600a83900a02600584016040517f70756c6c5f726571756573745f7265766965775f636f6d6d656e7400000000008152601b810191909152603b016040519081900390205560fa600a83900a02600584016040517f70756c6c5f726571756573745f7265766965770000000000000000000000000081526013810191909152603301604051908190039020556109c4600a83900a02600584016040517f70756c6c5f7265717565737400000000000000000000000000000000000000008152600c810191909152602c01604051908190039020556103e8600a83900a02600584016040517f707573680000000000000000000000000000000000000000000000000000000081526004810191909152602401604051908190039020556109c4600a83900a02600584016040517f7265706f7369746f7279000000000000000000000000000000000000000000008152600a810191909152602a0160405190819003902055611388600a83900a02600584016040517f72656c6561736500000000000000000000000000000000000000000000000000815260078101919091526027016040519081900390205560c8600a83900a02600584016040517f737461747573000000000000000000000000000000000000000000000000000081526006810191909152602601604051908190039020556107d0600a83900a02600584016040517f7465616d0000000000000000000000000000000000000000000000000000000081526004810191909152602401604051908190039020556107d0600a83900a02600584016040517f7465616d5f61646400000000000000000000000000000000000000000000000081526008810191909152602801604051908190039020556064600a83900a02600584016040517f776174636800000000000000000000000000000000000000000000000000000081526005810191909152602501604051908190039020555060015b92915050565b600080836006016040517f6d696c6573746f6e6500000000000000000000000000000000000000000000008152600981019190915260290160405180910390206040517f637265617465640000000000000000000000000000000000000000000000000081526007810191909152602701604051908190039020556000600684016040517f6f7267616e697a6174696f6e00000000000000000000000000000000000000008152600c810191909152602c0160405180910390206040517f6d656d6265725f696e76697465640000000000000000000000000000000000008152600e810191909152602e0160405190819003902055613a98600a83900a02600684016040517f6f7267616e697a6174696f6e00000000000000000000000000000000000000008152600c810191909152602c0160405180910390206040517f6d656d6265725f616464656400000000000000000000000000000000000000008152600c810191909152602c01604051908190039020555060015b92915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1062000d7557805160ff191683800117855562000da5565b8280016001018555821562000da5579182015b8281111562000da557825182559160200191906001019062000d88565b5b5062000db492915062000db8565b5090565b62000dd991905b8082111562000db4576000815560010162000dbf565b5090565b90565b6130348062000dec6000396000f3006060604052361561010f5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166306fdde038114610114578063095ea7b31461019f57806318160ddd146101d55780631e923ded146101fa57806323b872dd1461026757806323bd4d7a146102a3578063313ce5671461032e57806355ded44d1461035357806366253c44146103ea578063666e1b391461045457806370a082311461048757806376500a7e146104b857806392956c1e1461051b57806395d89b41146105c6578063a9059cbb14610651578063cdf25db314610687578063d85600ca14610733578063dd62ed3e146107a6578063e9dc1a95146107dd578063f2fde38b14610911575b600080fd5b341561011f57600080fd5b610127610932565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101645780820151818401525b60200161014b565b50505050905090810190601f1680156101915780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101aa57600080fd5b6101c1600160a060020a03600435166024356109dc565b604051901515815260200160405180910390f35b34156101e057600080fd5b6101e8610a97565b60405190815260200160405180910390f35b341561020557600080fd5b61024b60046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610a9e95505050505050565b604051600160a060020a03909116815260200160405180910390f35b341561027257600080fd5b6101c1600160a060020a0360043581169060243516604435610b19565b604051901515815260200160405180910390f35b34156102ae57600080fd5b610127610b9f565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101645780820151818401525b60200161014b565b50505050905090810190601f1680156101915780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561033957600080fd5b6101e8610c49565b60405190815260200160405180910390f35b341561035e57600080fd5b610127600160a060020a0360043516610c50565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101645780820151818401525b60200161014b565b50505050905090810190601f1680156101915780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156103f557600080fd5b6101c1600480359060446024803590810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610d2195505050505050565b604051901515815260200160405180910390f35b341561045f57600080fd5b6101c1600160a060020a0360043516610e76565b604051901515815260200160405180910390f35b341561049257600080fd5b6101e8600160a060020a0360043516610e8b565b60405190815260200160405180910390f35b34156104c357600080fd5b6101e860046024813581810190830135806020601f82018190048102016040519081016040528181529291906020840183838082843750949650610eaa95505050505050565b60405190815260200160405180910390f35b341561052657600080fd5b6105ae60046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528181529291906020840183838082843750949650610f1b95505050505050565b60405191825260208201526040908101905180910390f35b34156105d157600080fd5b61012761105d565b60405160208082528190810183818151815260200191508051906020019080838360005b838110156101645780820151818401525b60200161014b565b50505050905090810190601f1680156101915780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561065c57600080fd5b6101c1600160a060020a0360043516602435611107565b604051901515815260200160405180910390f35b341561069257600080fd5b6101c1600480359060446024803590810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284375094965061118f95505050505050565b604051901515815260200160405180910390f35b341561073e57600080fd5b6101c160048035600160a060020a03169060446024803590810190830135806020601f820181900481020160405190810160405281815292919060208401838380828437509496506113a495505050505050565b604051901515815260200160405180910390f35b34156107b157600080fd5b6101e8600160a060020a03600435811690602435166114a4565b60405190815260200160405180910390f35b34156107e857600080fd5b6101c160046024813581810190830135806020601f8201819004810201604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001908201803590602001908080601f01602080910402602001604051908101604052818152929190602084018383808284378201915050505050509190803590602001909190803590602001908201803590602001908080601f0160208091040260200160405190810160405281815292919060208401838380828437509496506114d195505050505050565b604051901515815260200160405180910390f35b341561091c57600080fd5b610930600160a060020a0360043516611812565b005b61093a61245d565b60038054600260001961010060018416150201909116046020601f820181900481020160405190810160405280929190818152602001828054600181600116156101000203166002900480156109d15780601f106109a6576101008083540402835291602001916109d1565b820191906000526020600020905b8154815290600101906020018083116109b457829003601f168201915b505050505090505b90565b6000604060443610156109ee57600080fd5b600083118015610a235750600160a060020a033381166000908152600a60209081526040808320938816835292905290812054115b15610a2d57600080fd5b600160a060020a033381166000818152600a6020908152604080832094891680845294909152908190208690557f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259086905190815260200160405180910390a35b5b5b5092915050565b6001545b90565b60006009826040518082805190602001908083835b60208310610ad357805182525b601f199092019160209182019101610ab3565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405190819003902054600160a060020a031690505b919050565b600060606064361015610b2b57600080fd5b610b3e600186868663ffffffff61189816565b1515610b4957600080fd5b83600160a060020a031685600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405190815260200160405180910390a3600191505b5b5b509392505050565b610ba761245d565b60048054600260001961010060018416150201909116046020601f820181900481020160405190810160405280929190818152602001828054600181600116156101000203166002900480156109d15780601f106109a6576101008083540402835291602001916109d1565b820191906000526020600020905b8154815290600101906020018083116109b457829003601f168201915b505050505090505b90565b6002545b90565b610c5861245d565b6001600701600083600160a060020a0316600160a060020a031681526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d145780601f10610ce957610100808354040283529160200191610d14565b820191906000526020600020905b815481529060010190602001808311610cf757829003601f168201915b505050505090505b919050565b600160a060020a03331660009081526020819052604081205460ff161515610d4857600080fd5b826006836040518082805190602001908083835b60208310610d7c57805182525b601f199092019160209182019101610d5c565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020557fbab878453bea46cf2222f6dd20b3fa8d80dc6ca2b5d4f854173f07227a21e1a6828442604051808060200180602001858152602001848152602001838103835286818151815260200191508051906020019080838360005b83811015610e235780820151818401525b602001610e0a565b50505050905090810190601f168015610e505780820380516001836020036101000a031916815260200191505b5092830390525060008152604090810193509150505180910390a15060015b5b92915050565b60006020819052908152604090205460ff1681565b600160a060020a0381166000908152600b60205260409020545b919050565b6000600c826040518082805190602001908083835b60208310610edf57805182525b601f199092019160209182019101610ebf565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390205490505b919050565b6000806006846040518082805190602001908083835b60208310610f5157805182525b601f199092019160209182019101610f31565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020546007856040518082805190602001908083835b60208310610fb957805182525b601f199092019160209182019101610f99565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020846040518082805190602001908083835b6020831061101d57805182525b601f199092019160209182019101610ffd565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902054915091505b9250929050565b61106561245d565b60058054600260001961010060018416150201909116046020601f820181900481020160405190810160405280929190818152602001828054600181600116156101000203166002900480156109d15780601f106109a6576101008083540402835291602001916109d1565b820191906000526020600020905b8154815290600101906020018083116109b457829003601f168201915b505050505090505b90565b60006040604436101561111957600080fd5b61112b6001858563ffffffff61197d16565b151561113657600080fd5b83600160a060020a031633600160a060020a03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8560405190815260200160405180910390a360019150610a8e565b5b5b5092915050565b600160a060020a03331660009081526020819052604081205460ff1615156111b657600080fd5b836007846040518082805190602001908083835b602083106111ea57805182525b601f1990920191602091820191016111ca565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020836040518082805190602001908083835b6020831061124e57805182525b601f19909201916020918201910161122e565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020557fbab878453bea46cf2222f6dd20b3fa8d80dc6ca2b5d4f854173f07227a21e1a683838642604051808060200180602001858152602001848152602001838103835287818151815260200191508051906020019080838360005b838110156112f65780820151818401525b6020016112dd565b50505050905090810190601f1680156113235780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b8381101561135a5780820151818401525b602001611341565b50505050905090810190601f1680156113875780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390a15060015b5b9392505050565b600160a060020a03331660009081526020819052604081205460ff1615156113cb57600080fd5b6113dd6001848463ffffffff611a0516565b15156113e857600080fd5b82600160a060020a03167fce96c271d8db9db4a90e538f30d7ec5a63f116893c4636688d9ce1502b5cc93683426040518080602001838152602001828103825284818151815260200191508051906020019080838360005b838110156114595780820151818401525b602001611440565b50505050905090810190601f1680156114865780820380516001836020036101000a031916815260200191505b50935050505060405180910390a2506001610e6f565b5b5b92915050565b600160a060020a038083166000908152600a60209081526040808320938516835292905220545b92915050565b600160a060020a03331660009081526020819052604081205481908190819060ff1615156114fe57600080fd5b61151360018a8a8a8a8a63ffffffff611f8a16565b151561151e57600080fd5b6009896040518082805190602001908083835b6020831061155157805182525b601f199092019160209182019101611531565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405190819003902054600160a060020a031692506116098660068a6040518082805190602001908083835b602083106115c857805182525b601f1990920191602091820191016115a8565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020549063ffffffff61241816565b91506007886040518082805190602001908083835b6020831061163e57805182525b601f19909201916020918201910161161e565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020876040518082805190602001908083835b602083106116a257805182525b601f199092019160209182019101611682565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902054905082600160a060020a03167f270e8b0620bd7a85855d0ae9401e7fa30ea6319fbf06c05f38cad80875f1cc018a8484428d604051808060200186815260200185815260200184815260200180602001838103835288818151815260200191508051906020019080838360005b8381101561175c5780820151818401525b602001611743565b50505050905090810190601f1680156117895780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156117c05780820151818401525b6020016117a7565b50505050905090810190601f1680156117ed5780820380516001836020036101000a031916815260200191505b5097505050505050505060405180910390a2600193505b5b5b50505095945050505050565b600160a060020a03331660009081526020819052604090205460ff16151561183957600080fd5b600160a060020a03811660009081526020819052604090205460ff16151561189357600160a060020a03808216600090815260208190526040808220805460ff199081166001179091553390931682529020805490911690555b5b5b50565b600160a060020a0380841660009081526009860160209081526040808320339094168352929052908120546118d3818463ffffffff61243416565b600160a060020a038087166000908152600989016020908152604080832033851684528252808320949094559187168152600a8901909152205461191d908463ffffffff61241816565b600160a060020a038086166000908152600a890160205260408082209390935590871681522054611954908463ffffffff61243416565b600160a060020a0386166000908152600a88016020526040902055600191505b50949350505050565b600160a060020a0333166000908152600a840160205260408120546119a8908363ffffffff61243416565b600160a060020a033381166000908152600a8701602052604080822093909355908516815220546119df908363ffffffff61241816565b600160a060020a0384166000908152600a860160205260409020555060015b9392505050565b6000600160a060020a0383161515611a1c57600080fd5b600084600b01836040518082805190602001908083835b60208310611a5357805182525b601f199092019160209182019101611a33565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020541115611bb057611b2184600b01836040518082805190602001908083835b60208310611ac557805182525b601f199092019160209182019101611aa5565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405190819003902054600160a060020a0385166000908152600a870160205260409020549063ffffffff61241816565b600160a060020a0384166000908152600a860160205260408082209290925590600b8601908490518082805190602001908083835b60208310611b7657805182525b601f199092019160209182019101611b56565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405190819003902055611f7e565b82600160a060020a031684600801836040518082805190602001908083835b60208310611bef57805182525b601f199092019160209182019101611bcf565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405190819003902054600160a060020a031614801590611cc45750600084600a01600086600801856040518082805190602001908083835b60208310611c7357805182525b601f199092019160209182019101611c53565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405190819003902054600160a060020a03168152602081019190915260400160002054115b15611ebc57600160a060020a03831660009081526007850160205260409020828051611cf492916020019061246f565b508284600801836040518082805190602001908083835b60208310611d2b57805182525b601f199092019160209182019101611d0b565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0392909216919091179055600a8401600060088601846040518082805190602001908083835b60208310611dc557805182525b601f199092019160209182019101611da5565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405190819003902054600160a060020a03908116825260208083019390935260409182016000908120549187168152600a880193849052828120919091559190829060088801908690518082805190602001908083835b60208310611e6857805182525b601f199092019160209182019101611e48565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405190819003902054600160a060020a03168152602081019190915260400160002055611f7e565b600160a060020a03831660009081526007850160205260409020828051611ee792916020019061246f565b508284600801836040518082805190602001908083835b60208310611f1e57805182525b601f199092019160209182019101611efe565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a03929092169190911790555b5b5060015b9392505050565b60008060008061200a868b6005018a6040518082805190602001908083835b602083106115c857805182525b601f1990920191602091820191016115a8565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020549063ffffffff61241816565b925089600601886040518082805190602001908083835b6020831061204157805182525b601f199092019160209182019101612021565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040518091039020876040518082805190602001908083835b602083106120a557805182525b601f199092019160209182019101612085565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902054915089600801896040518082805190602001908083835b6020831061211057805182525b601f1990920191602091820191016120f0565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405190819003902054600160a060020a031690508215801561215c575081155b1561216657600080fd5b89600c01856040518082805190602001908083835b6020831061219b57805182525b601f19909201916020918201910161217b565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040519081900390205460ff161515600114156121e257600080fd5b89546122069083906121fa908663ffffffff61241816565b9063ffffffff61241816565b8a55600160a060020a0330166000908152600a8b016020526040902054612233908363ffffffff61241816565b600160a060020a033081166000908152600a8d01602052604090209190915581161515612343576122d4838b600b018b6040518082805190602001908083835b602083106115c857805182525b601f1990920191602091820191016115a8565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020549063ffffffff61241816565b8a600b018a6040518082805190602001908083835b6020831061230957805182525b601f1990920191602091820191016122e9565b6001836020036101000a0380198251168184511680821785525050505050509050019150509081526020016040519081900390205561238a565b600160a060020a0381166000908152600a8b01602052604090205461236e908463ffffffff61241816565b600160a060020a0382166000908152600a8c0160205260409020555b60018a600c01866040518082805190602001908083835b602083106123c157805182525b601f1990920191602091820191016123a1565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051908190039020805460ff1916911515919091179055600193505b5b5b5050509695505050505050565b60008282016124298482101561244d565b8091505b5092915050565b60006124428383111561244d565b508082035b92915050565b80151561189357600080fd5b5b50565b60206040519081016040526000815290565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106124b057805160ff19168380011785556124dd565b828001600101855582156124dd579182015b828111156124dd5782518255916020019190600101906124c2565b5b506124ea9291506124ee565b5090565b6109d991905b808211156124ea57600081556001016124f4565b5090565b90565b600081600a0a6109c402836005016040517f70696e6700000000000000000000000000000000000000000000000000000000815260048101919091526024016040519081900390205560fa600a83900a02600584016040517f636f6d6d69745f636f6d6d656e740000000000000000000000000000000000008152600e810191909152602e01604051908190039020556109c4600a83900a02600584016040517f637265617465000000000000000000000000000000000000000000000000000081526006810191909152602601604051908190039020556000600584016040517f64656c65746500000000000000000000000000000000000000000000000000008152600681019190915260260160405190819003902055611388600a83900a02600584016040517f6465706c6f796d656e74000000000000000000000000000000000000000000008152600a810191909152602a01604051908190039020556064600a83900a02600584016040517f6465706c6f796d656e745f7374617475730000000000000000000000000000008152601181019190915260310160405190819003902055611388600a83900a02600584016040517f666f726b0000000000000000000000000000000000000000000000000000000081526004810191909152602401604051908190039020556064600a83900a02600584016040517f676f6c6c756d0000000000000000000000000000000000000000000000000000815260068101919091526026016040519081900390205560fa600a83900a02600584016040517f696e7374616c6c6174696f6e00000000000000000000000000000000000000008152600c810191909152602c01604051908190039020556103e8600a83900a02600584016040517f696e7374616c6c6174696f6e5f7265706f7369746f7269657300000000000000815260198101919091526039016040519081900390205560fa600a83900a02600584016040517f69737375655f636f6d6d656e74000000000000000000000000000000000000008152600d810191909152602d01604051908190039020556101f4600a83900a02600584016040517f697373756573000000000000000000000000000000000000000000000000000081526006810191909152602601604051908190039020556064600a83900a02600584016040517f6c6162656c00000000000000000000000000000000000000000000000000000081526005810191909152602501604051908190039020556000600584016040517f6d61726b6574706c6163655f707572636861736573000000000000000000000081526015810191909152603501604051908190039020556103e8600a83900a02600584016040517f6d656d626572000000000000000000000000000000000000000000000000000081526006810191909152602601604051908190039020556103e8600a83900a02600584016040517f6d656d62657273686970000000000000000000000000000000000000000000008152600a810191909152602a016040519081900390205560fa600a83900a02600584016040517f6d696c6573746f6e65000000000000000000000000000000000000000000000081526009810191909152602901604051908190039020556103e8600a83900a02600584016040517f6f7267616e697a6174696f6e00000000000000000000000000000000000000008152600c810191909152602c01604051908190039020556000600584016040517f6f72675f626c6f636b000000000000000000000000000000000000000000000081526009810191909152602901604051908190039020556101f4600a83900a02600584016040517f706167655f6275696c64000000000000000000000000000000000000000000008152600a810191909152602a016040519081900390205560fa600a83900a02600584016040517f70726f6a6563745f6361726400000000000000000000000000000000000000008152600c810191909152602c01604051908190039020556032600a83900a02600584016040517f70726f6a6563745f636f6c756d6e0000000000000000000000000000000000008152600e810191909152602e01604051908190039020556103e8600a83900a02600584016040517f70726f6a656374000000000000000000000000000000000000000000000000008152600781019190915260270160405190819003902055612710600a83900a02600584016040517f7075626c69630000000000000000000000000000000000000000000000000000815260068101919091526026016040519081900390205560fa600a83900a02600584016040517f70756c6c5f726571756573745f7265766965775f636f6d6d656e7400000000008152601b810191909152603b016040519081900390205560fa600a83900a02600584016040517f70756c6c5f726571756573745f7265766965770000000000000000000000000081526013810191909152603301604051908190039020556109c4600a83900a02600584016040517f70756c6c5f7265717565737400000000000000000000000000000000000000008152600c810191909152602c01604051908190039020556103e8600a83900a02600584016040517f707573680000000000000000000000000000000000000000000000000000000081526004810191909152602401604051908190039020556109c4600a83900a02600584016040517f7265706f7369746f7279000000000000000000000000000000000000000000008152600a810191909152602a0160405190819003902055611388600a83900a02600584016040517f72656c6561736500000000000000000000000000000000000000000000000000815260078101919091526027016040519081900390205560c8600a83900a02600584016040517f737461747573000000000000000000000000000000000000000000000000000081526006810191909152602601604051908190039020556107d0600a83900a02600584016040517f7465616d0000000000000000000000000000000000000000000000000000000081526004810191909152602401604051908190039020556107d0600a83900a02600584016040517f7465616d5f61646400000000000000000000000000000000000000000000000081526008810191909152602801604051908190039020556064600a83900a02600584016040517f776174636800000000000000000000000000000000000000000000000000000081526005810191909152602501604051908190039020555060015b92915050565b600080836006016040517f6d696c6573746f6e6500000000000000000000000000000000000000000000008152600981019190915260290160405180910390206040517f637265617465640000000000000000000000000000000000000000000000000081526007810191909152602701604051908190039020556000600684016040517f6f7267616e697a6174696f6e00000000000000000000000000000000000000008152600c810191909152602c0160405180910390206040517f6d656d6265725f696e76697465640000000000000000000000000000000000008152600e810191909152602e0160405190819003902055613a98600a83900a02600684016040517f6f7267616e697a6174696f6e00000000000000000000000000000000000000008152600c810191909152602c0160405180910390206040517f6d656d6265725f616464656400000000000000000000000000000000000000008152600c810191909152602c01604051908190039020555060015b929150505600a165627a7a72305820fb0430a6f48ddfdeabd84d4492de21e9e5a5dca79d32596f6cc2fa012313b6650029",\n  "networks": {\n    "17": {\n      "links": {},\n      "events": {\n        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "owner",\n              "type": "address"\n            },\n            {\n              "indexed": true,\n              "name": "spender",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            }\n          ],\n          "name": "Approval",\n          "type": "event"\n        },\n        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "from",\n              "type": "address"\n            },\n            {\n              "indexed": true,\n              "name": "to",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            }\n          ],\n          "name": "Transfer",\n          "type": "event"\n        },\n        "0x270e8b0620bd7a85855d0ae9401e7fa30ea6319fbf06c05f38cad80875f1cc01": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "contributor",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "username",\n              "type": "string"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "reservedValue",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "date",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "rewardType",\n              "type": "string"\n            }\n          ],\n          "name": "Contribution",\n          "type": "event"\n        },\n        "0xce96c271d8db9db4a90e538f30d7ec5a63f116893c4636688d9ce1502b5cc936": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": true,\n              "name": "contributor",\n              "type": "address"\n            },\n            {\n              "indexed": false,\n              "name": "username",\n              "type": "string"\n            },\n            {\n              "indexed": false,\n              "name": "date",\n              "type": "uint256"\n            }\n          ],\n          "name": "ContributorVerified",\n          "type": "event"\n        },\n        "0xbab878453bea46cf2222f6dd20b3fa8d80dc6ca2b5d4f854173f07227a21e1a6": {\n          "anonymous": false,\n          "inputs": [\n            {\n              "indexed": false,\n              "name": "rewardType",\n              "type": "string"\n            },\n            {\n              "indexed": false,\n              "name": "reservedType",\n              "type": "string"\n            },\n            {\n              "indexed": false,\n              "name": "value",\n              "type": "uint256"\n            },\n            {\n              "indexed": false,\n              "name": "date",\n              "type": "uint256"\n            }\n          ],\n          "name": "RewardValueSet",\n          "type": "event"\n        }\n      },\n      "updated_at": 1501863465638\n    }\n  },\n  "schema_version": "0.0.5",\n  "updated_at": 1501863465638\n}';

// const { abi } = JSON.parse(GitTokenContract)

var GitTokenAnalytics = function () {
  /**
   * GitToken Analytics Constructor Options
   * @param  {Object} options { mysql: { ...} }
   */
  function GitTokenAnalytics(options) {
    var _this = this;

    _classCallCheck(this, GitTokenAnalytics);

    this.listen();
    var web3Provider = options.web3Provider,
        mysqlOpts = options.mysqlOpts,
        contractAddress = options.contractAddress,
        abi = options.abi;


    this.saveContributionEvent = _saveContributionEvent2.default.bind(this);
    this.updateLeaderboard = _updateLeaderboard2.default.bind(this);
    this.updateTotalSupply = _updateTotalSupply2.default.bind(this);
    this.updateContributionFrequency = _updateContributionFrequency2.default.bind(this);
    this.updateSummaryStatistics = _updateSummaryStatistics2.default.bind(this);
    this.updateTokenInflationRate = _updateTokenInflationRate2.default.bind(this);
    this.updateInflationRateAverage = _updateInflationRateAverage2.default.bind(this);
    this.updateRewardTypeStats = _updateRewardTypeStats2.default.bind(this);
    this.updateUserTokenCreation = _updateUserTokenCreation2.default.bind(this);

    this.milestoneCreated = _milestoneCreated2.default.bind(this);

    this.contractDetails = {};

    if (web3Provider && mysqlOpts && contractAddress && abi) {
      this.configure({ web3Provider: web3Provider, mysqlOpts: mysqlOpts, contractAddress: contractAddress, abi: abi }).then(function (configured) {
        console.log('GitToken Analytics Processor Configured');
        console.log(JSON.stringify(configured, null, 2));
        _this._watchContributionEvents();
      });
    } else {
      console.log('GitToken Analytics Processor listening for \'configure\' event.');
    }
  }

  _createClass(GitTokenAnalytics, [{
    key: 'configure',
    value: function configure(_ref) {
      var _this2 = this;

      var web3Provider = _ref.web3Provider,
          mysqlOpts = _ref.mysqlOpts,
          contractAddress = _ref.contractAddress,
          abi = _ref.abi;

      return new _bluebird2.default(function (resolve, reject) {
        _this2.establishMySqlConnection({ mysqlOpts: mysqlOpts }).then(function () {
          return _this2.configureWeb3Provider({ web3Provider: web3Provider });
        }).then(function () {
          return _this2.configureContract({ abi: abi, contractAddress: contractAddress });
        }).then(function (contract) {
          return _this2.getContractDetails();
        }).then(function () {
          // console.log('this.contractDetails', this.contractDetails)
          resolve({
            contractDetails: _this2.contractDetails
          });
        }).catch(function (error) {
          console.log('error', error);
          _this2.handleError({ error: error, method: 'configure' });
        });
      });
    }
  }, {
    key: 'establishMySqlConnection',
    value: function establishMySqlConnection(_ref2) {
      var _this3 = this;

      var mysqlOpts = _ref2.mysqlOpts;

      return new _bluebird2.default(function (resolve, reject) {
        try {
          _this3.mysql = _mysql2.default.createConnection(_extends({}, mysqlOpts));
          _this3.mysql.connect();
          resolve({ mysql: _this3.mysql });
        } catch (error) {
          _this3.handleError({ error: error, method: 'establishMySqlConnection' });
        }
      });
    }
  }, {
    key: 'query',
    value: function query(_ref3) {
      var _this4 = this;

      var queryString = _ref3.queryString,
          _ref3$queryObject = _ref3.queryObject,
          queryObject = _ref3$queryObject === undefined ? [] : _ref3$queryObject;

      return new _bluebird2.default(function (resolve, reject) {
        /* TODO: Check mysql docs for second param (queryObject) */
        _this4.mysql.query(queryString, function (error, result) {
          if (error) {
            _this4.handleError({ error: error, method: 'query' });
          }
          resolve(result);
        });
      });
    }
  }, {
    key: 'configureWeb3Provider',
    value: function configureWeb3Provider(_ref4) {
      var _this5 = this;

      var web3Provider = _ref4.web3Provider;

      return new _bluebird2.default(function (resolve, reject) {
        try {
          console.log('web3Provider', web3Provider);
          _this5.web3 = new _web2.default(new _web2.default.providers.HttpProvider(web3Provider));
          _this5.eth = (0, _bluebird.promisifyAll)(_this5.web3.eth);
          resolve({ web3: _this5.web3, eth: _this5.eth });
        } catch (error) {
          _this5.handleError({ error: error, method: 'configureWeb3Provider' });
        }
      });
    }
  }, {
    key: 'configureContract',
    value: function configureContract(_ref5) {
      var _this6 = this;

      var abi = _ref5.abi,
          contractAddress = _ref5.contractAddress;

      return new _bluebird2.default(function (resolve, reject) {
        _this6.contract = _this6.web3.eth.contract(abi).at(contractAddress);
        _bluebird2.default.resolve(Object.keys(_this6.contract)).map(function (method) {
          if (_this6.contract[method] && _this6.contract[method]['request']) {
            _this6.contract[method] = (0, _bluebird.promisifyAll)(_this6.contract[method]);
          }
        }).then(function () {
          resolve(_this6.contract);
        }).catch(function (error) {
          _this6.handleError({ error: error, method: 'configureContract' });
        });
      });
    }
  }, {
    key: '_watchContributionEvents',
    value: function _watchContributionEvents() {
      var _this7 = this;

      var events = this.contract.Contribution({}, { fromBlock: 0, toBlock: 'latest' });

      events.watch(function (error, result) {
        if (error) {
          _this7.handleError({ error: error, method: '_watchContributionEvents' });
        }
        // console.log('_watchContributionEvents::result', result)
        _this7.saveContributionEvent({ event: result }).then(function (contribution) {
          process.send(JSON.stringify({
            event: 'new_contribution',
            data: contribution,
            message: 'New contribution received and saved.'
          }));
          return (0, _bluebird.join)(_this7.updateLeaderboard({ contribution: contribution }), _this7.updateTotalSupply({ contribution: contribution }), _this7.updateContributionFrequency({ contribution: contribution }), _this7.updateTokenInflationRate({ contribution: contribution }), _this7.updateInflationRateAverage({ contribution: contribution }), _this7.updateSummaryStatistics({ contribution: contribution }), _this7.updateRewardTypeStats({ contribution: contribution }), _this7.updateUserTokenCreation({ contribution: contribution }));
        }).then(function (data) {
          // console.log(JSON.stringify(data, null, 2))
          process.send(JSON.stringify({
            event: 'broadcast_contribution_data',
            message: 'Analytics updated on new contribution event.',
            data: data
          }));
        });
      });
    }
  }, {
    key: 'getContractDetails',
    value: function getContractDetails() {
      var _this8 = this;

      return new _bluebird2.default(function (resolve, reject) {
        (0, _bluebird.join)(_this8.contract.name.callAsync(), _this8.contract.symbol.callAsync(), _this8.contract.decimals.callAsync(), _this8.contract.organization.callAsync()).then(function (data) {
          // console.log('getContractDetails::data', data)
          try {
            _this8.contractDetails = {
              name: data[0],
              symbol: data[1],
              decimals: data[2].toNumber(),
              organization: data[3],
              address: _this8.contract.address
            };
            resolve({ contractDetails: _this8.contractDetails });
          } catch (error) {
            throw error;
          }
        }).catch(function (error) {
          console.log('contractDetails::error', error);
          _this8.handleError({ error: error, method: 'getContractDetails' });
        });
      });
    }
  }, {
    key: 'listen',
    value: function listen() {
      var _this9 = this;

      console.log('GitToken Analytics Listening on Separate Process: ', process.pid);
      process.on('message', function (msg) {
        // console.log('msg', msg)
        var _JSON$parse = JSON.parse(msg),
            event = _JSON$parse.event,
            data = _JSON$parse.data;

        switch (event) {
          case 'configure':
            var web3Provider = data.web3Provider,
                mysqlOpts = data.mysqlOpts,
                contractAddress = data.contractAddress,
                abi = data.abi;
            // console.log('listen::contractAddress, abi', contractAddress, abi)

            _this9.configure({ web3Provider: web3Provider, mysqlOpts: mysqlOpts, contractAddress: contractAddress, abi: abi }).then(function (configured) {
              process.send(JSON.stringify({ event: event, data: configured, message: 'GitToken Analytics Processor Configured' }));
              _this9._watchContributionEvents();
            });
            break;
          case 'contract_details':
            _this9.getContractDetails().then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: 'Contract details retrieved.' }));
            });
            break;
          case 'get_contributions':
            _this9.query({ queryString: 'SELECT * FROM contributions;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_total_supply':
            _this9.query({ queryString: 'SELECT * FROM total_supply;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_leaderboard':
            _this9.query({ queryString: 'SELECT * FROM leaderboard;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_contribution_frequency':
            _this9.query({ queryString: 'SELECT * FROM contribution_frequency;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_token_inflation':
            _this9.query({ queryString: 'SELECT * FROM token_inflation;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_token_inflation_mean':
            _this9.query({ queryString: 'SELECT * FROM token_inflation_mean;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_user_token_creation':
            _this9.query({ queryString: 'SELECT * FROM user_token_creation;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_reward_type_stats':
            _this9.query({ queryString: 'SELECT * FROM reward_type_stats;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_summary_statistics':
            _this9.query({ queryString: 'SELECT * FROM summary_statistics;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'get_milestones':
            _this9.query({ queryString: 'SELECT * FROM milestones;' }).then(function (result) {
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          case 'milestone_created':
            console.log('Milestone Created');
            _this9.milestoneCreated({ data: data }).then(function (result) {
              console.log('milestone::result', result);
              process.send(JSON.stringify({ event: event, data: result, message: event + ' data retrieved.' }));
            });
            break;
          default:
            process.send(JSON.stringify({
              message: 'Unhandled Analytics Event',
              data: [],
              event: 'error'
            }));
        }
      });
    }
  }, {
    key: 'handleError',
    value: function handleError(_ref6) {
      var error = _ref6.error,
          method = _ref6.method;

      /**
       * TODO Add switch case handler based on error codes, etc.
       * Determine when to send back message to parent process
       */
      console.log('handleError::method', method);
      console.log(error);
    }
  }]);

  return GitTokenAnalytics;
}();

exports.default = GitTokenAnalytics;